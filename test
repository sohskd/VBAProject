Public wbTarget As ObjectPublic wb As WorkbookPublic wsSource As WorksheetPublic newSheetName As String'Public sPath As StringPublic StrFile As String'Public targetPath As String
Sub dataExtractionUSD()
'    Dim wbTarget As Object'    Dim wb As Workbook'    Dim wsSource As Worksheet'    Dim newSheetName As String'    Dim sPath As String'    Dim StrFile As String
    'StrFile = Dir("C:\Users\A9900899\Desktop\Desmond\VBAProject\Raw\")    StrFile = Dir(ThisWorkbook.Sheets("Sheet1").Range("C5"))    'Path of RAW/Source Files "C:\Users\A9900899\Desktop\Desmond\VBAProject\Raw\"    sPath = ThisWorkbook.Sheets("Sheet1").Range("C5")    'Path of Target File eg "C:\Users\A9900899\Desktop\Desmond\VBAProject\"    targetPath = ThisWorkbook.Sheets("Sheet1").Range("C6")        'Uncomment to see alerts and screen updates    'Application.ScreenUpdating = False    Application.DisplayAlerts = False
    While StrFile <> ""                Debug.Print StrFile & "Entering"                If StrFile Like "*xls*" Then ' check that current file is Excel type        '            If StrFile Like "*Hong Kong*" Then''            Set wb = Workbooks.Open(sPath & StrFile)'            'Debug.Print TypeName(wb)''                For Each wsSource In wb.Sheets'                    Debug.Print wsSource.name ' Check sheet name for something you want'                    If wsSource.name = "USD Bal Input" Then''                        Set wbTarget = Workbooks.Open("C:\Users\A9900899\Desktop\Desmond\VBAProject\Test2.xlsx")''                        Call createSheet("HKK", wb, wsSource, wbTarget)''                        wbTarget.Close SaveChanges:=True''                    End If''                Next wsSource''            wb.Close False ' close workbook and don't save changes''            End If
            Select Case True            'Case 1            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B10") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C10")            Call searchThroughWorkBook(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 2            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B11") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C11")            Call searchThroughWorkBook(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 3            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B12") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C12")            Call searchThroughWorkBook(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 4            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B13") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C13")            Call searchThroughWorkBook(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 5            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B14") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C14")            Call searchThroughWorkBook(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 6            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B15") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C15")            Call searchThroughWorkBookOWH(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 7            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B16") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C16")            Call searchThroughWorkBookSGMY(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 8            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B17") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C17")            Call searchThroughWorkBookSGMY(wb, sPath, StrFile, newSheetName, targetPath)                        'Case 9            Case (StrFile Like "*" & ThisWorkbook.Sheets("Sheet1").Range("B18") & "*")                        newSheetName = ThisWorkbook.Sheets("Sheet1").Range("C18")            Call searchThroughWorkBookBOS(wb, sPath, StrFile, newSheetName, targetPath)                        Case Else            Debug.Print "Nope!!!"                               End Select                    End If                StrFile = Dir        Debug.Print StrFile & "   Just before i exit, i am going to search for next"            Wend
    'Create the USD Report sheet    Set wbTarget = Workbooks.Open(targetPath & ThisWorkbook.Sheets("Sheet1").Range("C7"))        With wbTarget        .Sheets.Add(After:=.Sheets(.Sheets.Count)).name = "USD_NII_Sensitivity"        End With    wbTarget.Close SaveChanges:=True        Application.ScreenUpdating = True    Application.DisplayAlerts = True
End Sub
Function createSheet(ByVal nameOfSheet As String, ByRef wbSource As Workbook, ByRef wsSource As Worksheet, ByRef wbTarget As Workbook)    '    ' Copy'    wbSource.Sheets(wsSource.name).Range("A1:W79").Copy''    ' Create the new sheet and name it at the end'    With wbTarget'    .Sheets.Add(After:=.Sheets(.Sheets.Count)).name = nameOfSheet'    End With''    ' Paste Special'    wbTarget.Sheets(nameOfSheet).Range("A1:W79").PasteSpecial xlValues'    wbTarget.Sheets(nameOfSheet).Range("A1:W79").PasteSpecial xlFormats        'Copy and Paste everything. Not limited to certain range    With wb.Sheets(wsSource.name).UsedRange    .Copy        ' Create the new sheet and name it at the end        With wbTarget        .Sheets.Add(After:=.Sheets(.Sheets.Count)).name = nameOfSheet        End With                With wbTarget.Sheets(nameOfSheet).Range(.Address)            .PasteSpecial xlValues            .PasteSpecial xlFormats        End With    End With        'Extra information for some sheets    If nameOfSheet = "HK_USD" Or nameOfSheet = "London_USD" Or nameOfSheet = "NY_USD" Or nameOfSheet = "NISP_USD" Or nameOfSheet = "Labuan_USD" Or nameOfSheet = "MY_USD" Then        Set Cell = ActiveSheet.Range("A" & Rows.Count).End(xlUp)        Cell.Offset(3, 3).Activate        ActiveCell.Value = "Paste The Table Formulas Here"        ActiveSheet.Range("Y2").Value = 1.446274    End If    End Function
Function searchThroughWorkBook(ByRef wb As Workbook, ByVal sPath As String, ByVal StrFile As String, ByVal newSheetName As String, ByVal targetPath As String)' This function will loop through all the workbooks in a specified folder which contains all the RAW files to extract from.' Open them if the Source Name sheet is what the user wants.' Create the sheet in the Target workbook (End product needed)            Set wb = Workbooks.Open(sPath & StrFile)                    For Each wsSource In wb.Sheets            Debug.Print wsSource.name ' Check sheet name for something you want            If wsSource.name = ThisWorkbook.Sheets("Sheet1").Range("C8") Then                        Set wbTarget = Workbooks.Open(targetPath & ThisWorkbook.Sheets("Sheet1").Range("C7"))                                'file = Dir(targetPath)                                '                If Dir(targetPath & "USDReport.xlsx") <> "" Then'                    Set wbTarget = Workbooks.Open("C:\Users\A9900899\Desktop\Desmond\VBAProject\USDReport.xlsx")''                Else'                    'Create workbook if dont exist'                    AddNewWorkbook ("USDReport")'                    Set wbTarget = Workbooks.Open(targetPath & "USDReport")''                    'Call openWorkBookDialog''                End If                                Call createSheet(newSheetName, wb, wsSource, wbTarget)
                wbTarget.Close SaveChanges:=True                                Exit For
            End If        Next wsSource        wb.Close False ' close workbook and don't save changes    End Function
Function searchThroughWorkBookOWH(ByRef wb As Workbook, ByVal sPath As String, ByVal StrFile As String, ByVal newSheetName As String, ByVal targetPath As String)' This function will loop through all the workbooks in a specified folder which contains all the RAW files to extract from.' Open them if the Source Name sheet is what the user wants.' Create the sheet in the Target workbook (End product needed)            Set wb = Workbooks.Open(sPath & StrFile)                    For Each wsSource In wb.Sheets            Debug.Print wsSource.name ' Check sheet name for something you want            If wsSource.name = ThisWorkbook.Sheets("Sheet1").Range("C19") Then                        Set wbTarget = Workbooks.Open(targetPath & ThisWorkbook.Sheets("Sheet1").Range("C7"))                                'file = Dir(targetPath)                                '                If Dir(targetPath & "USDReport.xlsx") <> "" Then'                    Set wbTarget = Workbooks.Open("C:\Users\A9900899\Desktop\Desmond\VBAProject\USDReport.xlsx")''                Else'                    'Create workbook if dont exist'                    AddNewWorkbook ("USDReport")'                    Set wbTarget = Workbooks.Open(targetPath & "USDReport")''                    'Call openWorkBookDialog''                End If                                Call createSheet(newSheetName, wb, wsSource, wbTarget)
                wbTarget.Close SaveChanges:=True                                Exit For
            End If        Next wsSource        wb.Close False ' close workbook and don't save changes    End Function
Function searchThroughWorkBookSGMY(ByRef wb As Workbook, ByVal sPath As String, ByVal StrFile As String, ByVal newSheetName As String, ByVal targetPath As String)' This function will loop through all the workbooks in a specified folder which contains all the RAW files to extract from.' Open them if the Source Name sheet is what the user wants.' Create the sheet in the Target workbook (End product needed)        Set wb = Workbooks.Open(sPath & StrFile)                    For Each wsSource In wb.Sheets            Debug.Print wsSource.name ' Check sheet name for something you want            If wsSource.name = ThisWorkbook.Sheets("Sheet1").Range("C20") Then                        Set wbTarget = Workbooks.Open(targetPath & ThisWorkbook.Sheets("Sheet1").Range("C7"))                                'file = Dir(targetPath)                                '                If Dir(targetPath & "USDReport.xlsx") <> "" Then'                    Set wbTarget = Workbooks.Open("C:\Users\A9900899\Desktop\Desmond\VBAProject\USDReport.xlsx")''                Else'                    'Create workbook if dont exist'                    AddNewWorkbook ("USDReport")'                    Set wbTarget = Workbooks.Open(targetPath & "USDReport")''                    'Call openWorkBookDialog''                End If                                Call createSheet(newSheetName, wb, wsSource, wbTarget)
                wbTarget.Close SaveChanges:=True                                Exit For
            End If        Next wsSource        wb.Close False ' close workbook and don't save changes    End Function
Function searchThroughWorkBookBOS(ByRef wb As Workbook, ByVal sPath As String, ByVal StrFile As String, ByVal newSheetName As String, ByVal targetPath As String)' This function will loop through all the workbooks in a specified folder which contains all the RAW files to extract from.' Open them if the Source Name sheet is what the user wants.' Create the sheet in the Target workbook (End product needed)        Set wb = Workbooks.Open(sPath & StrFile)                    For Each wsSource In wb.Sheets            Debug.Print wsSource.name ' Check sheet name for something you want            If wsSource.name = ThisWorkbook.Sheets("Sheet1").Range("C21") Then                        'Input ccy to USD in Pivot_Gap so that sheet will display required information            wb.Sheets(wsSource.name).Range("B4") = "USD"'            Set Cell = ActiveSheet.Range("B4")'            Cell.Offset(3, 3).Activate'            ActiveCell.Value = "USD"                        Set wbTarget = Workbooks.Open(targetPath & ThisWorkbook.Sheets("Sheet1").Range("C7"))                                Call createSheet(newSheetName, wb, wsSource, wbTarget)
                wbTarget.Close SaveChanges:=True                                Exit For
            End If        Next wsSource        wb.Close False ' close workbook and don't save changes    End Function
Function AddNewWorkbook(ByVal reportName As String)
'Adding New WorkbookWorkbooks.Add
'Saving the WorkbookActiveWorkbook.SaveAs targetPath & reportName
End Function
Sub openWorkBookDialog()' Prompts the user to open the Target workbook (End product needed)        Dim myFileName As Variant        'Get the path of the file selected by user    myFileName = Application.GetOpenFilename("Excel Files (*.xl*), *.xl*")    Debug.Print myFileName        'Open the file    If myFileName <> False Then        Workbooks.Open (myFileName)    End If
End Sub

